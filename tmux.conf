# Use <C-a> instead of the default <C-b> as Tmux prefix
set-option -g prefix C-a
unbind-key C-b
bind-key C-a send-prefix

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Allows last active window to be brought up with C-a C-a
bind-key C-a last-window

# Starts the naming of windows at 1
set -g base-index 1
set -g status on

#----------
# Enable vi like cursor movement in copy mode
#----------
set-window-option -g mode-keys vi

# Bind escape key to entering copy mode
# Press 'q' to exit copy-mode.
bind Escape copy-mode

## Visual selection
unbind-key -T copy-mode-vi Space
bind-key -T copy-mode-vi v send-keys -X begin-selection

## Copying
## Requires on OSX brew install reattach-to-user-namespace --with-wrap-pbcopy-and-pbpaste
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

## Rectangle visual selection
## Needs to be "prefixed" first C-a to work
unbind-key -T copy-mode-vi C-v
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

unbind-key -T copy-mode-vi [
bind-key -T copy-mode-vi [ send-keys -X begin-selection

unbind-key -T copy-mode-vi ]
bind-key -T copy-mode-vi ] send-keys -X copy-selection

# Options enable mouse support in Tmux
# tmux 2.1+
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set-option -g -q mouse on

# Smart pane switching with awareness of vim splits
# recommended by vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Makes "esc" faster inside a tmux session. Useful when running vim and needed
# to switch modes.
# https://github.com/neovim/neovim/issues/2035
set -sg escape-time 0
