# vim: filetype=sh
# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
 . /etc/bashrc
fi

umask 002

# Needed to fix <c-h> binding for neovim
export TERMINFO="$HOME/.terminfo"

#----------
# Linuxbrew
#----------
export PATH="$HOME/.linuxbrew/bin:$PATH"
export MANPATH="$HOME/.linuxbrew/share/man:$MANPATH"
export INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"

#----------
# Miniconda
#----------
#export PATH="$HOME/miniconda3/bin:$PATH"

#----------
# Git
#----------

# Set git text editor to nvim
export GIT_EDITOR=nvim

# Set autocomplete for git
if [ -f ~/.git-completion.bash ]; then
  . ~/.git-completion.bash
fi

#---------
# User interface
#---------

# Base16 shell colors
BASE16_SHELL="$HOME/.config/base16-shell/scripts/base16-default-dark.sh"
[[ "$-" == *i* ]] && [[ -s $BASE16_SHELL ]] && source $BASE16_SHELL

parse_git_branch() {
	git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# Customize linux prompt
export PS1="\n[\u@\h] \D{%F %T}\n \[\033[32m\]\w\[\033[33m\]\$(parse_git_branch)\[\033[00m\]\n$> "

#----------
# User specific aliases
#----------

# Line numbers (`-N`) and tabs width = 2 space (`-x 2`)
alias less="less -N -x 2"

alias rsync="rsync -avr --partial --progress --rsh=ssh"
alias ls="ls -F"
alias pd="pushd"
alias bd="popd"
alias make="make --warn-undefined-variables"
alias vi="nvim"

# Build the ctags for vim
alias vim_tags="ctags -R ."
alias top="htop"

# Rodeo applications
alias rodeo="open -a /Applications/rodeo.app/"

#----------
# hh configurations
#----------
export HH_CONFIG=hicolor,rawhistory,blacklist         # get more colors
shopt -s histappend              # append new history items to .bash_history
export HISTCONTROL=ignorespace   # leading space hides commands from history
export HISTFILESIZE=10000        # increase history file size (default is 500)
export HISTSIZE=${HISTFILESIZE}  # increase history size (default is 500)
export PROMPT_COMMAND="history -a; history -n; ${PROMPT_COMMAND}"   # mem/file sync

# if this is interactive shell, then bind hh to Ctrl-r (for Vi mode check doc)
if [[ $- =~ .*i.* ]]; then bind '"\C-r": "hh \C-j"'; fi

#----------
# Nvim-R (formally known as Vim-R-Plugin)
#----------

# Change the TERM environment variable (to get 256 colors) even if you are
# accessing your system through ssh and using either Tmux or GNU Screen:
if [ "$TERM" = "xterm" ] || [ "$TERM" = "xterm-256color" ]
then
       export TERM=xterm-256color
       export HAS_256_COLORS=yes
fi

if [ "$TERM" = "screen" ] && [ "$HAS_256_COLORS" = "yes" ]
then
 	 export TERM=screen-256color
fi

#----------
# fzf: Fuzzy finder
#----------
[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# Bind ctrl-f to ctrl-t
# ctrl-t will also activate fzf_select
# https://github.com/junegunn/fzf/issues/546
bind "$(bind -s | grep __fzf_select | sed 's/\\C-t/\\C-f/')"

#----------
# Functions
#----------

# Extract function
function extract(){
  if [ -f $1 ] ; then
    case $1 in
        *.tar.bz2)   tar xvjf $1     ;;
        *.tar.gz)    tar xvzf $1     ;;
        *.bz2)       bunzip2 $1      ;;
        *.rar)       unrar x $1      ;;
        *.gz)        gunzip $1       ;;
        *.tar)       tar xvf $1      ;;
        *.tbz2)      tar xvjf $1     ;;
        *.tgz)       tar xvzf $1     ;;
        *.zip)       unzip $1        ;;
        *.Z)         uncompress $1   ;;
        *.7z)        7z x $1         ;;
        *.xz)        xz -d $1         ;;
        *)           echo "'$1' cannot be extracted via >extract<" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Counts the Number of Columns in a File
function num_cols(){
  awk '{print NF}' $1 | sort -nu | tail -n 1
}

# Conda Bash completion 
# http://conda.pydata.org/docs/install/tab-completion.html
# eval "$(register-python-argcomplete conda)"

# For iTerm2 integration with shell
# https://www.iterm2.com/documentation-shell-integration.html
#test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"
