" vim: set ft=vim:
" Stops vim from behaving in a strongly vi -compatible way.
" Place at the start of vimrc file as it can affect lots of other
" options which you may want to override
set nocompatible

call plug#begin('~/.config/nvim/plugged')

Plug 'airblade/vim-gitgutter' " Shows git diff in the gutter (sign column)
Plug 'chriskempson/base16-vim' " Base16 color scheme
Plug 'christoomey/vim-tmux-navigator' " Seamless navigation between tmux and vim panes. Allows treating vim and tmux as one a unified session.
Plug 'ctrlpvim/ctrlp.vim' " Fuzzy file, buffer, mru, tag, etc finder. For searching in files use ack.vim
Plug 'epeli/slimux' " Allows interaction between vim and a tmux window/pane
Plug 'garbas/vim-snipmate' " TextMate's snippets features in Vim
Plug 'kshenoy/vim-signature' " Place, toggle and display marks
Plug 'lervag/vimtex' " Support for writing latex documents
Plug 'Lokaltog/vim-easymotion' " Quick movements
Plug 'MarcWeber/vim-addon-mw-utils' " Dependency of vim-snipmate
Plug 'majutsushi/tagbar' " Displays tags in a window, ordered by scope
Plug 'mileszs/ack.vim' " Searching tool
Plug 'nathanaelkane/vim-indent-guides' " Visually displaying indent levels in code
Plug 'python-mode/python-mode'
Plug 'scrooloose/nerdtree' " File structure viewer
Plug 'rhysd/committia.vim' " More pleasant editing on git commit message
Plug 'tinyheero/vim-snippets' " Snippets for vim-snipmate
Plug 'tomtom/tlib_vim' " Dependency of vim-snipmate
Plug 'tomtom/tcomment_vim' " Universal comment
Plug 'tpope/vim-fugitive' " Git integration
Plug 'tpope/vim-repeat' " enable repeating supported plugin maps with '.'
Plug 'tpope/vim-surround' " Quoting and parenthesizing made simple
Plug 'vim-airline/vim-airline' " Status bar
Plug 'vim-airline/vim-airline-themes' " Themes for vim-airline
Plug 'vim-pandoc/vim-pandoc-syntax' " Provides markdown syntax? Fixes a nvim-r-plugin rmarkdown bug

call plug#end()

filetype off

"----------
" General
"----------
syntax on

" Set j,k movements from strict linewise to onscreen display line movements.
" If movement preceeded by a number, useful in relative number mode, then
" revert back to strict linewise movements.
"
" Additionally, it will save movements larger than 5 lines to the jumplist.
" Use ctrl-o/ctrl-i to navigate backwards and forwards through this jumplist.
"
" https://bluz71.github.io/2017/05/15/vim-tips-tricks.html
nnoremap <expr> j v:count ? (v:count > 5 ? "m'" . v:count : '') . 'j' : 'gj'
nnoremap <expr> k v:count ? (v:count > 5 ? "m'" . v:count : '') . 'k' : 'gk'

" Turns plugin on depending on filetype
filetype plugin on

" Special identation for certain filetypes
filetype indent on

" Highlight searches
set hlsearch

" Incremental searching
set incsearch

" Ignore case while searching
set ignorecase

" Set map leader to allow for extra key combinations
let mapleader = ","
let g:mapleader = ","

" Interacting with system clipboard
" https://www.reddit.com/r/neovim/comments/3fricd/easiest_way_to_copy_from_neovim_to_system/
" NOTE: Using `set clipboard+=unnamedplus` makes block paste ineffective.

" Copy to clipboard
vnoremap <leader>y "+y
nnoremap <leader>Y "+yg_
nnoremap <leader>y "+y
nnoremap <leader>yy "+yy

" Paste from clipboard
nnoremap <leader>p "+p
nnoremap <leader>P "+P
vnoremap <leader>p "+p
vnoremap <leader>P "+P

" Turn off ability to enter Ex mode which is not very useful to be in
nnoremap Q <nop>

" Set to auto read when a file is changed from the outside
set autoread

" Turn off error beep/flash
set visualbell t_vb=

" Reselect visual block after indent
vnoremap < <gv
vnoremap > >gv

" Swap ; and :
" Avoid using <SHIFT> for Ex commands		
" Only applies in 'normal' mode
nnoremap ; :
nnoremap : ;

" Better wrapping with breakindent
" https://bluz71.github.io/2017/05/15/vim-tips-tricks.html
set breakindent
set showbreak=\\\\\

"----------
" User Interface
"----------

" Black background
set background=dark

" Use base16 colors
let base16colorspace=256
colorscheme base16-default-dark

" Always show current position
set ruler

" Always show status line
set ls=2

" Use hybrid line number mode
" http://jeffkreeftmeijer.com/2013/vims-new-hybrid-line-number-mode/
set relativenumber
set number

" Hotkey for toggling paste mode
set pastetoggle=<F2>

" Show matching brackets when text indicator is over them
set showmatch

" Turn on omni completion
set omnifunc=syntaxcomplete#Complete

" Use Ctrl+Space to do omnicompletion:
if has("gui_running")
    inoremap <C-Space> <C-x><C-o>
else
    inoremap <Nul> <C-x><C-o>
endif

" Turns on nice popup menu for omni completion
:highlight Pmenu ctermbg=238 gui=bold

" Highlight current line
set cursorline

"----------
" Text, tab and indent related
"----------

" 1 tab == 2 spaces
" Number of spaces to use for autoindenting"
set shiftwidth=2
set tabstop=2
set softtabstop=2

" Insert tabs on the start of a line according to shiftwidth, not tabstop
set smarttab

" Auto indent
set ai

" Smart indent
set si

"----------
" Mappings
"----------

"" Easy window navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" Command to substitute all occurrences of the word under the cursor
nnoremap <leader>s :s/\<<C-r><C-w>\>/
nnoremap <leader>%s :%s/\<<C-r><C-w>\>/

" Move Up One Directory
map <leader>cd ;cd ..

" Send text to tmux window/pane via the slimux plugin
" Shortcuts only work in python scripts
au BufNewFile,BufRead *.py map \c ;SlimuxShellConfigure<CR>
au BufNewFile,BufRead *.py map \d ;SlimuxREPLSendLine<CR>
au BufNewFile,BufRead *.py vmap \se :SlimuxREPLSendSelection<CR>

"----------
" Autocommands
"----------

" Automatically equalize splits when Vim is resized
autocmd VimResized * wincmd =

" Set number of spaces for tabs
autocmd Filetype r setlocal expandtab ts=2 sts=2 sw=2
autocmd Filetype rmd setlocal expandtab ts=2 sts=2 sw=2
autocmd Filetype markdown setlocal expandtab ts=2 sts=2 sw=2
autocmd Filetype python setlocal expandtab ts=4 sts=4 sw=4

" Set no wrap for R scripts
autocmd Filetype r set nowrap

" Allow for html omnicompletion to take place outside of R chunks and R
" omnicompletion to take place inside of R chunks
" https://groups.google.com/forum/#!msg/vim-r-plugin/KCxsqbj-hn4/1or-EG_1DQAJ
" Following autocmd works when using nvim-r plugin
autocmd FileType rmd let b:rplugin_nonr_omnifunc="htmlcomplete#CompleteTags" | setlocal omnifunc=CompleteR

" Syntax Highlighting for Rprofile Files
au BufNewFile,BufRead *.Rprofile set filetype=r

" Syntax Highlighting for Snakemake Files
" Requires syntax highlight definition file. See link below for more details.
" https://bitbucket.org/snakemake/snakemake/wiki/FAQ#markdown-header-how-do-i-enable-syntax-highlighting-in-vim-for-snakefiles
au BufNewFile,BufRead Snakefile set syntax=snakemake
au BufNewFile,BufRead *.rules set syntax=snakemake
au BufNewFile,BufRead *.snakefile set syntax=snakemake
au BufNewFile,BufRead *.snake set syntax=snakemake

"----------
" Airline Plugin
"----------

" Enable the list of buffers at the top (in the tabline)
let g:airline#extensions#tabline#enabled = 1

" Do not show buffer number
let g:airline#extensions#tabline#buffer_nr_show = 0

" Populate the g:airline_symbols dictionary with the proper font glyphs for
" various symbols
let g:airline_powerline_fonts = 1

"----------
" NERDTree Plugin
"----------

" Prevents NERDTree plugin from using fancy arrow graphics
let g:NERDTreeDirArrows=0

" Map <leader>nt key for turning on NERDTree
map <leader>nt ;NERDTree<ENTER>

" Prevents NERDTree plugin from using fancy arrow graphics
let g:NERDTreeDirArrows=0

" Show line numbers in NERDtree
let NERDTreeShowLineNumbers=1

"----------
" Nvim-R
" Formerly known as Vim-R-Plugin
"----------

" R help appears in horizontal window
let R_nvimpager = "horizontal"

" Highlight chunk header as R code
let rrst_syn_hl_chunk = 1
let rmd_syn_hl_chunk = 1

" zathura is the recommend pdf viewer for Nvim-R, but requires very recent
" version that is unavailable as a binary from package manager
" Setting it to evince is a workaround.
let R_pdfviewer = "evince"

" Don't use the Nvim-R terminal emulator
" This requires the use of tmux
let R_in_buffer = 0

" Run R inside tmux session
let R_tmux_split = 1

" R panel always opens horizontally
let R_rconsole_width = 0

" Type 2 `_` to get `<-`
let R_assign = 2

"---------
" ack.vim
"---------

" Use ag in the background
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

" Prevent Ack from jumping ot first result
cnoreabbrev Ack Ack!

" Hotkey for activating Ack
nnoremap <Leader>a :Ack!<Space>

"---------
" Ctrlp
"---------

" Use Ctrlp for buffer management
nnoremap <leader>b :CtrlPBuffer<cr>

"---------
" Tmux Powerline
"---------

" Remove the funny symbols in tmuxline
let g:tmuxline_powerline_separators = 1

"----------
" Ctags 
"----------
" Ctag Support for R 
" https://github.com/majutsushi/tagbar/wiki#r
let g:tagbar_type_r = {
    \ 'ctagstype' : 'r',
    \ 'kinds'     : [
        \ 'f:Functions',
        \ 'g:GlobalVariables',
        \ 'v:FunctionVariables',
    \ ]
\ }

" Turns on the TagBar
nnoremap <leader>tb :TagbarToggle<CR>

"set tags=./tags,tags;

"----------
" Indent guides
"----------
let g:indent_guides_auto_colors = 0
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  ctermbg=black
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven ctermbg=darkgrey
